{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Masa\\xFCst\\xFC\\\\Projeler\\\\ReactNative\\\\HavaDurumu\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Weather from \"./components/Weather\";\nimport SearchBar from \"./components/SearchBar\";\nvar API_KEY = \"46a9246bebba16d42b36aac3fc3ba8af\";\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    weatherData = _useState2[0],\n    setWeatherData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loaded = _useState4[0],\n    setLoaded = _useState4[1];\n  function fetchWeatherData(cityName) {\n    var API, response, data;\n    return _regeneratorRuntime.async(function fetchWeatherData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoaded(false);\n            API = \"https://api.openweathermap.org/data/2.5/weather?q=\" + cityName + \"&units=metric&appid=\" + API_KEY;\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(API));\n          case 5:\n            response = _context.sent;\n            if (!(response.status == 200)) {\n              _context.next = 13;\n              break;\n            }\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(response.json());\n          case 9:\n            data = _context.sent;\n            setWeatherData(data);\n            _context.next = 14;\n            break;\n          case 13:\n            setWeatherData(null);\n          case 14:\n            setLoaded(true);\n            _context.next = 20;\n            break;\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](2);\n            console.log(_context.t0);\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 17]], Promise);\n  }\n  useEffect(function () {\n    fetchWeatherData('İstanbul');\n  }, []);\n  if (!loaded) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, React.createElement(ActivityIndicator, {\n      color: \"gray\",\n      size: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  } else if (weatherData === null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(SearchBar, {\n      fetchWeatherData: fetchWeatherData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), React.createElement(Text, {\n      style: styles.primaryText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"City Not Found! Try Different City\"));\n  }\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(Weather, {\n    weatherData: weatherData,\n    fetchWeatherData: fetchWeatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  primaryText: {\n    margin: 20,\n    fontSize: 28\n  }\n});","map":{"version":3,"names":["StatusBar","React","useState","useEffect","StyleSheet","Text","View","ActivityIndicator","Weather","SearchBar","API_KEY","App","_useState","_useState2","_slicedToArray","weatherData","setWeatherData","_useState3","_useState4","loaded","setLoaded","fetchWeatherData","cityName","API","response","data","_regeneratorRuntime","async","fetchWeatherData$","_context","prev","next","awrap","fetch","sent","status","json","t0","console","log","stop","Promise","createElement","style","styles","container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","size","primaryText","create","flex","backgroundColor","alignItems","justifyContent","margin","fontSize"],"sources":["C:/Users/Administrator/Desktop/Masaüstü/Projeler/ReactNative/HavaDurumu/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\r\nimport Weather from './components/Weather';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nconst API_KEY = \"46a9246bebba16d42b36aac3fc3ba8af\";\r\n\r\n\r\nexport default function App() {\r\n\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [loaded, setLoaded] = useState(true);\r\n\r\n    async function fetchWeatherData(cityName) {\r\n        setLoaded(false);\r\n        const API = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${API_KEY}`\r\n        try {\r\n            const response = await fetch(API);\r\n            if(response.status == 200) {\r\n                const data = await response.json();\r\n                setWeatherData(data);\r\n            } else {\r\n                setWeatherData(null);\r\n            }\r\n            setLoaded(true);\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchWeatherData('İstanbul');\r\n    }, [])\r\n    \r\n\r\n    if(!loaded) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <ActivityIndicator color='gray'  size={36} />\r\n            </View>\r\n\r\n        )\r\n    }\r\n\r\n    else if(weatherData === null) {\r\n        return (\r\n            <View style={styles.container}>\r\n                <SearchBar fetchWeatherData={fetchWeatherData}/>\r\n                <Text style={styles.primaryText}>City Not Found! Try Different City</Text>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Weather weatherData={weatherData} fetchWeatherData={fetchWeatherData}  />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  primaryText: {\r\n      margin: 20,\r\n      fontSize: 28\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}